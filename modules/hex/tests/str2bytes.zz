using <string.h>::{memcmp, strlen};
using <stdio.h>::{printf, fgetc, putchar, fgets, stdin, FILE};
using hex;
using <stdlib.h>::{malloc, realloc, free};



test {
    stdin  = ""
    stdout = ""
}

test {
    stdin  = "76"
    stdout = {0x76}
}

test {
    stdin  = "7612"
    stdout = {0x76, 0x12}
}

test {
    stdin  = "EeEafF8e"
    stdout = {0xee, 0xea, 0xff, 0x8e}
}

fn t(char *str) {
    u8 mut out[1024];
    out[0] = 0;

    usize slen = as<usize>(strlen(str));
    static_attest(len(str) == slen);
    usize count = hex::str2bin(str, slen, out, 1024);

    static_attest(count < len(out));

    for (usize mut i = 0; i < count; i++) {
        putchar(out[i]);
    }
}

pub fn main() -> int {
    for (;;) {
        char mut line[128];
        usize mut l = 0;

        char *rr = (char*)fgets(line, sizeof(line), stdin);
        if rr == 0 {
           break;
        }
        static_attest(safe(line));
        static_attest(nullterm(line));
        t(line);
    }
    return 0;
}
